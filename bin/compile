#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

mkdir -p $BUILD_DIR $CACHE_DIR

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

if [[ `ruby -v` == "ruby 1"* ]]; then
  echo "-----> Installing Ruby 2.2.1"
  git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
  git clone https://github.com/garnieretienne/rvm-download.git ~/.rbenv/plugins/rvm-download
  export PATH="$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH"
  rbenv download 2.2.1
  rbenv rehash
  rbenv local 2.2.1
  rbenv global 2.2.1
else
  echo "-----> Using `ruby -v`"
fi

# build nginx config unless overridden by user
if [ ! -f $BUILD_DIR/conf/nginx.conf ]; then
  echo "-----> Using default nginx.conf.erb"
  mkdir -p $BUILD_DIR/conf
  cp $LP_DIR/conf/nginx.conf.erb $BUILD_DIR/conf/nginx.conf.erb
fi

# build mime.types unless overridden by user
if [ ! -f $BUILD_DIR/conf/mime.types ]; then
  echo "-----> Using default mime.types"
  mkdir -p $BUILD_DIR/conf
  cp $LP_DIR/conf/mime.types $BUILD_DIR/conf/mime.types
fi

export GEM_HOME=$BUILD_DIR/.gems
export PATH=$BUILD_DIR/.gems/bin:$PATH

if [ ! -f $BUILD_DIR/.gems/bin/jekyll ]; then
    echo "Jekyll not found!"
    echo "-----> Installing Jekyll"

    # Newer versions depend on ruby_dep which needs newer ruby versions
    gem install listen -v "< 3.1" --no-rdoc --no-ri | indent

    gem install liquid --no-rdoc --no-ri | indent
    gem install jekyll redcarpet sass --no-rdoc --no-ri | indent
    gem install therubyracer --no-rdoc --no-ri | indent

    if [ ! -f $BUILD_DIR/.gems/bin/bundle ]; then
      gem install bundler --no-rdoc --no-ri | indent
    fi
fi

# Set charset to avoid https://github.com/jekyll/jekyll/issues/4268
echo "-----> Setting UTF-8 environment"
export LC_ALL=C.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

echo "-----> Building Jekyll site"
cd $BUILD_DIR

if [ -f $BUILD_DIR/Gemfile ]; then
  $BUILD_DIR/.gems/bin/bundle install --binstubs=$BUILD_DIR/.gems/bin --path=$BUILD_DIR/.gems | indent
fi

$BUILD_DIR/.gems/bin/jekyll build | indent
if [ -f sass/style.scss ]; then
  $BUILD_DIR/.gems/bin/sass sass/style.scss style.css | indent
fi

# build a startup script
cat <<EOF >"$BUILD_DIR/bin/start_nginx"
#!/usr/bin/env bash
erb conf/nginx.conf.erb > conf/nginx.conf
mkdir -p logs
touch logs/access.log logs/error.log
(tail -qF -n 0 --pid=\$\$ logs/*.log &)
exec bin/nginx -p .
EOF
chmod +x "$BUILD_DIR/bin/start_nginx"
